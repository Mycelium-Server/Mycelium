name: CMake Stable

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}
      - if: matrix.os == 'windows-latest'
        name: Upload libuv (Windows)
        uses: actions/upload-artifact@v2
        with:
          name: Mycelium-${{ matrix.os }}
          path: |
            build/thirdparty/libuv/${{env.BUILD_TYPE}}/*.dll
      - if: matrix.os == 'windows-latest'
        name: Upload executable (Windows)
        uses: actions/upload-artifact@v2
        with:
          name: Mycelium-${{ matrix.os }}
          path: |
            build/${{env.BUILD_TYPE}}/*.exe
      - if: matrix.os == 'ubuntu-latest'
        name: Upload executable (Linux)
        uses: actions/upload-artifact@v2
        with:
          name: Mycelium-${{ matrix.os }}
          path: |
            build/Mycelium*
      - name: Create runtime
        run: |
          mkdir runtime
      - name: Add `registry_codec.nbt` to runtime
        run: |
          cp registry_codec.nbt runtime/registry_codec.nbt
      - name: Add `cert.pem` to runtime
        run: |
          cp cert.pem runtime/cert.pem
      - name: Add `properties.yml` to runtime
        run: |
          cp properties.yml runtime/properties.yml
      - name: Upload runtime
        uses: actions/upload-artifact@v2
        with:
          name: Mycelium-${{ matrix.os }}
          path: |
            runtime

  arm:
    runs-on: ubuntu-latest
    name: build

    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu_latest
          - arch: armv7
            distro: ubuntu_latest

    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          setup: |
            mkdir -p build

          dockerRunArgs: |
            --volume "build:/build"

          shell: /bin/sh

          install: |
            apt-get update -y
            apt-get install -y git
            apt-get install -y build-essential
            apt-get install -y g++
            apt-get install -y curl libcurl4-openssl-dev
            apt-get install -y python3
            apt-get install -y cmake

          run: |
            git clone https://github.com/JNNGL/Mycelium
            mkdir -p build
            cmake Mycelium -B build -DCMAKE_BUILD_TYPE=Release
            cmake --build build --config Release
            cp -rf build/* /build

      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: Mycelium-${{ matrix.distro }}-${{ matrix.arch }}
          path: |
            build/Mycelium*
      - name: Create runtime
        run: |
          mkdir runtime
      - name: Add `registry_codec.nbt` to runtime
        run: |
          cp registry_codec.nbt runtime/registry_codec.nbt
      - name: Add `cert.pem` to runtime
        run: |
          cp cert.pem runtime/cert.pem
      - name: Add `properties.yml` to runtime
        run: |
          cp properties.yml runtime/properties.yml
      - name: Upload runtime
        uses: actions/upload-artifact@v2
        with:
          name: Mycelium-${{ matrix.distro }}-${{ matrix.arch }}
          path: |
            runtime